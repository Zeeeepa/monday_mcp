name: Automated Version Bump

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - labeled

jobs:
  version-bump:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'labeled')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.12'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Yarn
        run: npm install -g yarn@1.22.21

      - name: Install dependencies
        run: yarn install

      # Bump version using labels (bump:major, bump:minor, bump:patch)
      - name: Bump version and create tag
        id: bumpr
        if: github.event_name == 'push'
        uses: haya14busa/action-bumpr@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump_level: 'patch'
          tag_as_user: 'github-actions[bot]'
          tag_as_email: 'github-actions[bot]@users.noreply.github.com'

      # Check for label on PR (for dry-run/validation)
      - name: Check version bump (PR)
        if: github.event_name == 'pull_request'
        uses: haya14busa/action-bumpr@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true

      # Update package.json files if version was bumped
      - name: Update package versions
        if: github.event_name == 'push' && !steps.bumpr.outputs.skip
        run: |
          NEW_VERSION="${{ steps.bumpr.outputs.next_version }}"
          NEW_VERSION_NO_V="${NEW_VERSION#v}"

          echo "Updating versions to: $NEW_VERSION_NO_V"

          # Update root package.json
          npm version $NEW_VERSION_NO_V --no-git-tag-version

          # Update all package.json files in packages/
          for package_dir in packages/*/; do
            if [ -f "$package_dir/package.json" ]; then
              echo "Updating $package_dir/package.json"
              cd "$package_dir"
              npm version $NEW_VERSION_NO_V --no-git-tag-version
              cd ../..
            fi
          done

      # Commit the version updates
      - name: Commit version updates
        if: github.event_name == 'push' && !steps.bumpr.outputs.skip
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add package.json packages/*/package.json
          git commit -m "chore: bump version to ${{ steps.bumpr.outputs.next_version }} [skip ci]" || exit 0
          git push

      # Build packages after version bump
      - name: Build packages
        if: github.event_name == 'push' && !steps.bumpr.outputs.skip
        run: yarn build

      # Create GitHub Release
      - name: Create GitHub Release
        if: github.event_name == 'push' && !steps.bumpr.outputs.skip
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bumpr.outputs.next_version }}
          release_name: Release ${{ steps.bumpr.outputs.next_version }}
          body: |
            ## Changes

            ${{ steps.bumpr.outputs.message }}

            ## Packages Updated
            - @mondaydotcomorg/agent-toolkit
            - @mondaydotcomorg/monday-api-mcp

            Auto-generated release from version bump workflow.
          draft: false
          prerelease: false

  # Job to comment on PR about version bump
  pr-comment:
    if: github.event_name == 'pull_request' && github.event.action == 'labeled'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const labels = context.payload.pull_request.labels.map(label => label.name);
            const versionLabels = labels.filter(label => label.startsWith('bump:'));

            if (versionLabels.length > 0) {
              const versionType = versionLabels[0].replace('bump:', '');
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `üè∑Ô∏è **Version Bump Detected**\n\nThis PR is labeled for a **${versionType}** version bump.\n\nWhen merged, this will automatically:\n- Bump the version across all packages\n- Create a new git tag\n- Create a GitHub release\n- Trigger the publish workflow`
              });
            }
